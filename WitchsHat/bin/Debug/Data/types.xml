<?xml version="1.0" encoding="utf-8"?>
<Classes>
  <Class>
    <Name>Action</Name>
    <Super>ActionEventTarget</Super>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>ActionEventTarget</Name>
    <Super>EventTarget</Super>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>BinaryInputManager</Name>
    <Super>InputManager</Super>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>BinaryInputSource</Name>
    <Super>InputSource</Super>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>CanvasLayer</Name>
    <Super>Group</Super>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>CanvasScene</Name>
    <Super>Scene</Super>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>Class</Name>
    <Members>
      <Member>
        <Name>create</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>getInheritanceTree</Name>
        <Type>function</Type>
      </Member>
    </Members>
  </Class>
  <Class>
    <Name>Core</Name>
    <Super>EventTarget</Super>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>Deferred</Name>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>DOMScene</Name>
    <Super>Scene</Super>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>DOMSound</Name>
    <Super>EventTarget</Super>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>Easing</Name>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>Entity</Name>
    <Super>Node</Super>
    <Members>
      <Member>
        <Name>backgroundColor</Name>
        <Type>String</Type>
        <Hint>Entityの背景色。CSSの'color'プロパティと同様の形式で指定します。</Hint>
      </Member>
      <Member>
        <Name>buttonMode</Name>
        <Type>String</Type>
        <Hint>Entityにボタンの機能を設定します。Entityに対するタッチ、クリックをleft, right, up, down, a, bいずれかのボタン入力として割り当てます。</Hint>
      </Member>
      <Member>
        <Name>buttonPressed</Name>
        <Type>Boolean</Type>
        <Hint>Entityが押されているかどうかを示します。enchant.Entity.buttonMode が設定されているときだけ機能します。</Hint>
      </Member>
      <Member>
        <Name>compositeOperation</Name>
        <Type>String</Type>
        <Hint>Entityを描画する際の合成処理を設定する. Canvas上に描画する際のみ有効. CanvasのコンテキストのglobalCompositeOperationにセットされる.</Hint>
      </Member>
      <Member>
        <Name>debugColor</Name>
        <Type>String</Type>
        <Hint>Entityのデバッグの枠色. CSSの'color'プロパティと同様の形式で指定できる.</Hint>
      </Member>
      <Member>
        <Name>height</Name>
        <Type>Number</Type>
        <Hint>Entityの高さ。</Hint>
      </Member>
      <Member>
        <Name>opacity</Name>
        <Type>Number</Type>
        <Hint>Entityの透明度. 0から1までの値を設定する(0が完全な透明, 1が完全な不透明).</Hint>
      </Member>
      <Member>
        <Name>originX</Name>
        <Type>Number</Type>
        <Hint>回転・拡大縮小の基準点のX座標</Hint>
      </Member>
      <Member>
        <Name>originY</Name>
        <Type>Number</Type>
        <Hint>回転・拡大縮小の基準点のY座標</Hint>
      </Member>
      <Member>
        <Name>rotation</Name>
        <Type>Number</Type>
        <Hint>Entityの回転角 (度数法).</Hint>
      </Member>
      <Member>
        <Name>scaleX</Name>
        <Type>Number</Type>
        <Hint>Entityのx軸方向の倍率.</Hint>
      </Member>
      <Member>
        <Name>scaleY</Name>
        <Type>Number</Type>
        <Hint>Entityのy軸方向の倍率.</Hint>
      </Member>
      <Member>
        <Name>touchEnabled</Name>
        <Type>Boolean</Type>
        <Hint>Entityのタッチを有効にするかどうかを指定する.</Hint>
      </Member>
      <Member>
        <Name>visible</Name>
        <Type>bool</Type>
        <Hint>Entityを表示するかどうかを指定する.</Hint>
      </Member>
      <Member>
        <Name>width</Name>
        <Type>number</Type>
        <Hint>Entityの横幅。</Hint>
      </Member>
      <Member>
        <Name>disableCollection</Name>
        <Type>function</Type>
        <Hint>インスタンスをコレクションの対象から除外する.</Hint>
      </Member>
      <Member>
        <Name>enableCollection</Name>
        <Type>function</Type>
        <Hint>インスタンスをコレクションの対象にする. デフォルトで呼び出される.</Hint>
      </Member>
      <Member>
        <Name>intersect</Name>
        <Type>function</Type>
        <Hint>intersect(other: Entity): Boolean&#xA;他のEntityと衝突判定を行います。</Hint>
      </Member>
      <Member>
        <Name>rotate</Name>
        <Type>function</Type>
        <Hint>rotate(deg: Number)&#xA;Entityを回転する.&#xA;Parameters:&#xA;{Number} deg: 回転する角度 (度数法).</Hint>
      </Member>
      <Member>
        <Name>scale</Name>
        <Type>function</Type>
        <Hint>scale(x: Number, y: Number)&#xA;Entityを拡大縮小する.&#xA;Parameters:&#xA;{Number} x: 拡大するx軸方向の倍率.&#xA;
{Number} y Optional: 拡大するy軸方向の倍率.</Hint>
      </Member>
      <Member>
        <Name>within</Name>
        <Type>function</Type>
        <Hint>within(other: *, distance: Number): Boolean&#xA;Entityの中心点どうしの距離により衝突判定を行う.&#xA;</Hint>
      </Member>
    </Members>
  </Class>
  <Class>
    <Name>ENV</Name>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>Event</Name>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>EventTarget</Name>
    <Members>
      <Member>
        <Name>addEventListener</Name>
        <Type>function</Type>
        <Hint>addEventListener(type: String, listener: function)&#xA;イベントリスナを追加します。</Hint>
      </Member>
      <Member>
        <Name>clearEventListener</Name>
        <Type>function</Type>
        <Hint>clearEventListener(type: String)&#xA;すべてのイベントリスナを削除します。</Hint>
      </Member>
      <Member>
        <Name>dispatchEvent</Name>
        <Type>function</Type>
        <Hint>dispatchEvent(type: enchant.Event)&#xA;イベントを発行します。</Hint>
      </Member>
      <Member>
        <Name>removeEventListener</Name>
        <Type>function</Type>
        <Hint>removeEventListener(type: String, listener: function)&#xA;イベントリスナを削除します。</Hint>
      </Member>
    </Members>
  </Class>
  <Class>
    <Name>Game</Name>
    <Members>
      <Member>
        <Name>assets</Name>
        <Type>array</Type>
      </Member>
      <Member>
        <Name>input</Name>
        <Type>object</Type>
      </Member>
      <Member>
        <Name>fps</Name>
        <Type>number</Type>
      </Member>
      <Member>
        <Name>height</Name>
        <Type>number</Type>
      </Member>
      <Member>
        <Name>load</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>preload</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>pushScene</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>removeScene</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>replaceScene</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>rootScene</Name>
        <Type>Scene</Type>
      </Member>
      <Member>
        <Name>start</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>width</Name>
        <Type>number</Type>
      </Member>
    </Members>
  </Class>
  <Class>
    <Name>Group</Name>
    <Super>Node</Super>
    <Members>
      <Member>
        <Name>addChild</Name>
        <Type>function</Type>
        <Hint>addChild(node: Node)&#xA;GroupにNodeを追加する.</Hint>
      </Member>
      <Member>
        <Name>childNodes</Name>
        <Type>Array</Type>
        <Hint>子のNode.</Hint>
      </Member>
      <Member>
        <Name>firstChild</Name>
        <Type>Node</Type>
        <Hint>最初の子Node.</Hint>
      </Member>
      <Member>
        <Name>lastChild</Name>
        <Type>Node</Type>
        <Hint>最後の子Node.</Hint>
      </Member>
      <Member>
        <Name>insertBefore</Name>
        <Type>function</Type>
        <Hint>insertBefore(node: Node, reference: Node)&#xA;referenceの前にnodeを挿入する.</Hint>
      </Member>
      <Member>
        <Name>removeChild</Name>
        <Type>function</Type>
        <Hint>removeChild(node: Node)&#xA;GroupからNodeを削除する.</Hint>
      </Member>
    </Members>
  </Class>
  <Class>
    <Name>InputManager</Name>
    <Super>EventTarget</Super>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>InputSource</Name>
    <Super>EventTarget</Super>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>KeyboardInputManager</Name>
    <Super>BinaryInputManager</Super>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>KeyboardInputSource</Name>
    <Super>BinaryInputSource</Super>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>Label</Name>
    <Super>Entity</Super>
    <Members>
      <Member>
        <Name>color</Name>
        <Type>String</Type>
        <Hint>文字色の指定. CSSの'color'プロパティと同様の形式で指定できる.</Hint>
      </Member>
      <Member>
        <Name>font</Name>
        <Type>String</Type>
        <Hint>フォントの指定. CSSの'font'プロパティと同様の形式で指定できる.</Hint>
      </Member>
      <Member>
        <Name>text</Name>
        <Type>String</Type>
        <Hint>表示するテキスト.</Hint>
      </Member>
      <Member>
        <Name>textAlign</Name>
        <Type>String</Type>
        <Hint>テキストの水平位置の指定. CSSの'text-align'プロパティと同様の形式で指定できる.</Hint>
      </Member>
    </Members>
  </Class>
  <Class>
    <Name>LoadingScene</Name>
    <Super>Scene</Super>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>Map</Name>
    <Super>Entity</Super>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>Node</Name>
    <Super>EventTarget</Super>
    <Members>
      <Member>
        <Name>moveBy</Name>
        <Type>function</Type>
        <Hint>moveBy(x: Number, y:Number)&#xA;移動距離を指定してNodeを移動します。</Hint>
      </Member>
      <Member>
        <Name>moveTo</Name>
        <Type>function</Type>
        <Hint>moveBy(x: Number, y:Number)&#xA;移動先を指定してNodeを移動します。</Hint>
      </Member>
      <Member>
        <Name>scene</Name>
        <Type>Scene</Type>
        <Hint>Nodeが属しているScene.</Hint>
      </Member>
      <Member>
        <Name>x</Name>
        <Type>number</Type>
        <Hint>Nodeのx座標.</Hint>
      </Member>
      <Member>
        <Name>y</Name>
        <Type>number</Type>
        <Hint>Nodeのy座標.</Hint>
      </Member>
    </Members>
  </Class>
  <Class>
    <Name>ParallelAction</Name>
    <Super>Action</Super>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>Scene</Name>
    <Super>Group</Super>
  </Class>
  <Class>
    <Name>Sprite</Name>
    <Super>Entity</Super>
    <Hint>画像表示機能を持ったクラス.</Hint>
    <Members>
      <Member>
        <Name>frame</Name>
        <Type>object</Type>
        <Hint>表示するフレームのインデックス.</Hint>
      </Member>
      <Member>
        <Name>image</Name>
        <Type>object</Type>
        <Hint>Spriteで表示する画像.</Hint>
      </Member>
    </Members>
  </Class>
  <Class>
    <Name>Surface</Name>
    <Super>EventTarget</Super>
    <Members>
      <Member>
        <Name>clear</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>clone</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>context</Name>
        <Type>Context</Type>
      </Member>
      <Member>
        <Name>draw</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>getPixel</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>height</Name>
        <Type>number</Type>
      </Member>
      <Member>
        <Name>load</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>setPixel</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>toDataURL</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>width</Name>
        <Type>number</Type>
      </Member>
    </Members>
  </Class>
  <Class>
    <Name>Timeline</Name>
    <Super>EventTarget</Super>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>Tween</Name>
    <Super>Action</Super>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>WebAudioSound</Name>
    <Super>EventTarget</Super>
    <Members>
    </Members>
  </Class>
  <Class>
    <Name>Context</Name>
    <Members>
      <Member>
        <Name>arc</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>beginPath</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>clearRect</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>fillRect</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>fillstyle</Name>
        <Type>String</Type>
      </Member>
      <Member>
        <Name>stroke</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>strokeRect</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>strokeStyle</Name>
        <Type>String</Type>
      </Member>
    </Members>
  </Class>
  <Class>
    <Name>enchant</Name>
    <Members>
      <Member>
        <Name>Action</Name>
        <Type>Action</Type>
      </Member>
      <Member>
        <Name>Class</Name>
        <Type>Class</Type>
      </Member>
      <Member>
        <Name>Game</Name>
        <Type>Game</Type>
      </Member>
      <Member>
        <Name>Group</Name>
        <Type>Group</Type>
      </Member>
      <Member>
        <Name>ENV</Name>
        <Type>ENV</Type>
      </Member>
      <Member>
        <Name>Label</Name>
        <Type>Label</Type>
      </Member>
      <Member>
        <Name>Scene</Name>
        <Type>Scene</Type>
      </Member>
      <Member>
        <Name>Sound</Name>
        <Type>Sound</Type>
      </Member>
      <Member>
        <Name>Sprite</Name>
        <Type>Sprite</Type>
      </Member>
      <Member>
        <Name>Surface</Name>
        <Type>Surface</Type>
      </Member>
    </Members>
  </Class>
  <Class>
    <Name>String</Name>
    <Members>
      <Member>
        <Name>length</Name>
        <Type>Number</Type>
      </Member>
      <Member>
        <Name>charAt</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>indexOf</Name>
        <Type>function</Type>
      </Member>
      <Member>
        <Name>substring</Name>
        <Type>function</Type>
      </Member>
    </Members>
  </Class>
</Classes>
